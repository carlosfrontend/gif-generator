{"version":3,"file":"main.2bc72c7dc767b82c42bb.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,KAAOT,IAAc,aAAaU,KAAKV,KAAaA,EAAYM,EAAQG,KAAKJ,GAE3F,CAID,IAAKL,EAAW,MAAM,IAAIW,MAAM,yDAChCX,EAAYA,EAAUY,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFnB,EAAoBoB,EAAIb,C,2FClBXc,EAAqBC,IAChC,IAAKA,EAASC,GACZ,MAAM,IAAIL,MACR,gEAEJ,EAGWM,EAAYA,CAACC,EAAMC,KACZD,EACRE,YAAcD,CAAK,EAGlBE,EAAUA,CAACC,EAAKP,KACZO,EACRjB,IAAMU,EAASQ,KAAKC,OAAOC,SAASC,GAAG,EAWnCC,EAAcT,IACPA,EACRE,YAAc,EAAE,EAGfQ,EAAkBA,KAC7BzB,SAAS0B,cAAc,WAAWC,MAAQ,EAAE,E,wCCtBxCC,EACJ,gFACIC,EAAY7B,SAAS0B,cAAc,UACnCP,EAAMnB,SAAS0B,cAAc,WACnCP,EAAIjB,IAAM4B,EAEH,MCXDC,EAAU/B,SAAS0B,cAAc,iBACjCM,EAAYhC,SAAS0B,cAAc,eACnCO,EAAejC,SAAS0B,cAAc,kBACtCQ,EAAYlC,SAAS0B,cAAc,mBAEzCK,EAAQ7B,IAAMiC,EACdH,EAAU9B,IAAMkC,EAEhBF,EAAUG,iBAAiB,SDGCC,UAC1B,IACE,MAAM1B,QAAiB2B,MAAMX,EAAK,CAAEY,KAAM,SAC1C7B,EAAkBC,GAClBY,EAAWK,GACX,MAAMY,QAAgB7B,EAAS8B,OAC/BxB,EAAQC,EAAKsB,EACf,CAAE,MAAOzB,GACPG,EAAIjB,IAAM4B,EACVhB,EAAUe,EAAWb,EACvB,KCZFiB,EAAaI,iBAAiB,SDeLC,UACvB,IACE,MACMK,EADc3C,SAAS0B,cAAc,WACNC,MAC/BiB,EAAc,GAAEhB,EAAInB,QACxB,SACA,kBACKkC,IAED/B,QAAiB2B,MAAMK,EAAY,CAAEJ,KAAM,SACjD7B,EAAkBC,GAClBY,EAAWK,GACX,MAAMY,QAAgB7B,EAAS8B,ODvBD9B,KAChC,GAA6B,IAAzBA,EAASQ,KAAKf,QAAyC,MAAzBO,EAASiC,KAAKC,OAC9C,MAAM,IAAItC,MACR,2EAEJ,ECmBEuC,CAAkBN,GAClBvB,EAAQC,EAAKsB,GACbjB,EAAWK,GACXJ,GACF,CAAE,MAAOT,GACPG,EAAIjB,IAAM4B,EACVhB,EAAUe,EAAWb,GACrBS,GACF,I","sources":["webpack://gif-generator/webpack/bootstrap","webpack://gif-generator/webpack/runtime/global","webpack://gif-generator/webpack/runtime/publicPath","webpack://gif-generator/./src/modules/functions.js","webpack://gif-generator/./src/modules/handlers.js","webpack://gif-generator/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const handleApiKeyError = (response) => {\n  if (!response.ok) {\n    throw new Error(\n      'Could not obtain a new image. A correct API key is required!!'\n    );\n  }\n};\n\nexport const showError = (span, error) => {\n  const spanError = span;\n  spanError.textContent = error;\n};\n\nexport const showGif = (img, response) => {\n  const imgTag = img;\n  imgTag.src = response.data.images.original.url;\n};\n\nexport const handleGifNotFound = (response) => {\n  if (response.data.length === 0 && response.meta.status === 200) {\n    throw new Error(\n      'Try writing something different. We did not find images with that term!!'\n    );\n  }\n};\n\nexport const clearError = (span) => {\n  const spanError = span;\n  spanError.textContent = '';\n};\n\nexport const clearInputValue = () => {\n  document.querySelector('#search').value = '';\n};\n","import {\n  handleApiKeyError,\n  showError,\n  showGif,\n  handleGifNotFound,\n  clearError,\n  clearInputValue,\n} from './functions';\nimport defaultImg from '../images/default.gif';\n\nconst URI =\n  'https://api.giphy.com/v1/gifs/random?api_key=rVwOiFFX3oZk5jfqXjux1KP3HHyTbcZH';\nconst spanError = document.querySelector('.error');\nconst img = document.querySelector('.result');\nimg.src = defaultImg;\n\nexport const getRandomGif = async () => {\n  try {\n    const response = await fetch(URI, { mode: 'cors' });\n    handleApiKeyError(response);\n    clearError(spanError);\n    const gifData = await response.json();\n    showGif(img, gifData);\n  } catch (error) {\n    img.src = defaultImg;\n    showError(spanError, error);\n  }\n};\n\nexport const searchGif = async () => {\n  try {\n    const searchInput = document.querySelector('#search');\n    const searchInputValue = searchInput.value;\n    const URI_SEARCH = `${URI.replace(\n      'random',\n      'translate'\n    )}&s=${searchInputValue}`;\n\n    const response = await fetch(URI_SEARCH, { mode: 'cors' });\n    handleApiKeyError(response);\n    clearError(spanError);\n    const gifData = await response.json();\n    handleGifNotFound(gifData);\n    showGif(img, gifData);\n    clearError(spanError);\n    clearInputValue();\n  } catch (error) {\n    img.src = defaultImg;\n    showError(spanError, error);\n    clearInputValue();\n  }\n};\n","import './styles/main.css';\nimport magnifyIconSrc from './images/magnify.svg';\nimport attrImageSrc from './images/PoweredBy_200px-White_HorizLogo.png';\nimport { getRandomGif, searchGif } from './modules/handlers';\n\nconst magnify = document.querySelector('#magnify-icon');\nconst attrImage = document.querySelector('.attr-image');\nconst searchButton = document.querySelector('#search-button');\nconst getGifBtn = document.querySelector('.get-gif-button');\n\nmagnify.src = magnifyIconSrc;\nattrImage.src = attrImageSrc;\n\ngetGifBtn.addEventListener('click', getRandomGif);\nsearchButton.addEventListener('click', searchGif);\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","handleApiKeyError","response","ok","showError","span","error","textContent","showGif","img","data","images","original","url","clearError","clearInputValue","querySelector","value","URI","spanError","defaultImg","magnify","attrImage","searchButton","getGifBtn","magnifyIconSrc","attrImageSrc","addEventListener","async","fetch","mode","gifData","json","searchInputValue","URI_SEARCH","meta","status","handleGifNotFound"],"sourceRoot":""}